{"version":3,"sources":["Components/Table/Table.module.css","Components/Search.module.css","Components/WeatherInfoReduser.tsx","Components/Icons/Clouds.tsx","Components/Icons/Rain.tsx","Components/Icons/Clear.tsx","Components/Icons/Snow.tsx","Components/Icons/Thunderstorm.tsx","Components/Month/Month.tsx","Components/InfoWeath/InfoWeath.tsx","Components/Table/Table.tsx","Components/Search.tsx","App.tsx","serviceWorker.js","index.js","Components/InfoWeath/InfoWeath.module.css"],"names":["module","exports","InitialState","temp","name","temp_max","temp_min","main","icon","feels_like","humidity","speed","list","description","dt","WeatherInfoReduser","state","action","type","payload","data","weather","wind","payload2","store","createStore","Clouds","className","Rain","Clear","Snow","Thunderstorm","month","Date","getMonth","InfoWeath","props","date","s","first","infoWeath","Math","round","getDate","getFullYear","details","Table","useState","buttonNumber","setbuttonNumber","arr","length","i","dt_txt","push","container","buttons","onClick","table","map","item","key","id","substring","API_KEY","Search","useReducer","dispatch","city","cityName","setValue","fetch","e","a","preventDefault","Promise","all","axios","get","then","response","response2","catch","error","alert","wrapper","titleText","search","rel","href","onSubmit","example","placeholder","value","onChange","target","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.9aacadab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__2Jg9e\",\"table\":\"Table_table__YUcnT\",\"buttons\":\"Table_buttons__1GuH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__3Y0i1\",\"example\":\"Search_example__JW0B4\",\"titleText\":\"Search_titleText__3aBx2\"};","import { createStore } from 'redux';\r\nimport { InitialStateType, WeatherActionType } from './Typescript/WeatherInfoReduserType';\r\n\r\nexport const WEATHER_CREATE = ' WEATHER_CREATE';\r\nexport const DAYS_5 = ' DAYS_5';\r\n\r\nexport const InitialState: InitialStateType = {\r\n\ttemp: null,\r\n\tname: null,\r\n\ttemp_max: null,\r\n\ttemp_min: null,\r\n\tmain: null,\r\n\ticon: null,\r\n\tfeels_like: null,\r\n\thumidity: null,\r\n\tspeed: null,\r\n\tlist: [],\r\n\tdescription: null,\r\n\tdt: null\r\n};\r\n\r\nexport const WeatherInfoReduser = (state = InitialState, action: WeatherActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase WEATHER_CREATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttemp: action.payload.data.main.temp,\r\n\t\t\t\tname: action.payload.data.name,\r\n\t\t\t\ttemp_max: action.payload.data.main.temp_max,\r\n\t\t\t\ttemp_min: action.payload.data.main.temp_min,\r\n\t\t\t\tmain: action.payload.data.weather[0].main,\r\n\t\t\t\tfeels_like: action.payload.data.main.feels_like,\r\n\t\t\t\thumidity: action.payload.data.main.humidity,\r\n\t\t\t\tspeed: action.payload.data.wind.speed,\r\n\t\t\t\tdescription: action.payload.data.weather[0].description,\r\n\t\t\t\tdt: action.payload.data.dt\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase DAYS_5: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: action.payload2.data.list\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport let store = createStore(WeatherInfoReduser);\r\n","import React from \"react\";\r\nimport \"./Icons.css\";\r\nexport const Clouds: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"weather_class\">\r\n        <div className=\"icon cloudy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"cloud\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Icons.css\";\r\nexport const Rain: React.FC = () => {\r\n  return (\r\n    <div className=\"weather_class\">\r\n      <div className=\"icon rainy\">\r\n        <div className=\"cloud\"></div>\r\n        <div className=\"rain\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Icons.css\";\r\nexport const Clear: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"weather_class\">\r\n        <div className=\"icon sunny\">\r\n          <div className=\"sun\">\r\n            <div className=\"rays\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Icons.css\";\r\nexport const Snow: React.FC = () => {\r\n  return (\r\n    <div className=\"icon flurries\">\r\n      <div className=\"cloud\"></div>\r\n      <div className=\"snow\">\r\n        <div className=\"flake\"></div>\r\n        <div className=\"flake\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Icons.css\";\r\n\r\nexport const Thunderstorm: React.FC = () => {\r\n  return (\r\n    <div className=\"icon thunder-storm\">\r\n      <div className=\"cloud\"></div>\r\n      <div className=\"lightning\">\r\n        <div className=\"bolt\"></div>\r\n        <div className=\"bolt\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","const nameOfMonth: Array<string> = [\r\n\t'Января',\r\n\t'Февраля',\r\n\t'Марта',\r\n\t'Апреля',\r\n\t'Мая',\r\n\t'Июня',\r\n\t'Июля',\r\n\t'Августа',\r\n\t'Сентября',\r\n\t'Октября',\r\n\t'Ноября',\r\n\t'Декабря'\r\n];\r\nconst date = new Date();\r\nconst monthNumber = date.getMonth();\r\nexport const month = nameOfMonth[monthNumber];\r\n","import React from 'react';\r\nimport { Clouds } from '../Icons/Clouds';\r\nimport { Rain } from '../Icons/Rain';\r\nimport { Clear } from '../Icons/Clear';\r\nimport { Snow } from '../Icons/Snow';\r\nimport { Thunderstorm } from '../Icons/Thunderstorm';\r\nimport s from './InfoWeath.module.css';\r\nimport { PropsInfo } from './../Typescript/WeatherInfoReduserType';\r\nimport { month } from '../Month/Month';\r\n\r\nexport const InfoWeath = (props: PropsInfo) => {\r\n\tlet date = new Date(props.state.dt! * 1000);\r\n\r\n\treturn (\r\n\t\t<div className={s.first}>\r\n\t\t\t{props.state.main.temp && (\r\n\t\t\t\t<div className={s.infoWeath}>\r\n\t\t\t\t\t<span className={s.temp}>{Math.round(props.state.main.temp)}°</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{date.getDate()} {month} {date.getFullYear()}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div>Город: {props.state.name}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Clouds' && <Clouds />}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Rain' && <Rain />}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Clear' && <Clear />}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Mist' && <Clouds />}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Snow' && <Snow />}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Thunderstorm' && <Thunderstorm />}</div>\r\n\t\t\t\t\t<div>{props.state.weather[0].main === 'Fog' && <Clouds />}</div>\r\n\t\t\t\t\t<span>{props.state.weather[0].description}</span>\r\n\t\t\t\t\t<details className={s.details}>\r\n\t\t\t\t\t\t<summary>Детально</summary>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{Math.round(props.state.main.temp_min!)} °/\r\n\t\t\t\t\t\t\t{Math.round(props.state.main.temp_max!)} °\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>Ощущается как: {Math.round(props.state.main.feels_like!)} °C</div>\r\n\t\t\t\t\t\t<div>Влажность: {props.state.main.humidity}%</div>\r\n\t\t\t\t\t\t<div>Ветер: {props.state.wind.speed} м/с</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport s from './Table.module.css';\r\nimport { Props } from '../Typescript/WeatherInfoReduserType';\r\n\r\nconst Table = (props: Props) => {\r\n\tconst [ buttonNumber, setbuttonNumber ] = useState(1);\r\n\tconst arr = [];\r\n\tlet date = new Date();\r\n\r\n\t//отображение таблицы текущего дня\r\n\r\n\tif (props.state.length !== 0) {\r\n\t\tswitch (buttonNumber) {\r\n\t\t\tcase 1:\r\n\t\t\t\tfor (let i = 0; i < props.state.length; i++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tprops.state[0].dt_txt[9] === props.state[i].dt_txt[9] &&\r\n\t\t\t\t\t\tprops.state[0].dt_txt[8] === props.state[i].dt_txt[8]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tvar data = props.state[i];\r\n\t\t\t\t\t\tarr.push(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfor (let i = 0; i < props.state.length; i++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tprops.state[10].dt_txt[9] === props.state[i].dt_txt[9] &&\r\n\t\t\t\t\t\tprops.state[10].dt_txt[8] === props.state[i].dt_txt[8]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tdata = props.state[i];\r\n\t\t\t\t\t\tarr.push(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tfor (let i = 0; i < props.state.length; i++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tprops.state[20].dt_txt[9] === props.state[i].dt_txt[9] &&\r\n\t\t\t\t\t\tprops.state[20].dt_txt[8] === props.state[i].dt_txt[8]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tdata = props.state[i];\r\n\t\t\t\t\t\tarr.push(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tfor (let i = 0; i < props.state.length; i++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tprops.state[30].dt_txt[9] === props.state[i].dt_txt[9] &&\r\n\t\t\t\t\t\tprops.state[30].dt_txt[8] === props.state[i].dt_txt[8]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tdata = props.state[i];\r\n\t\t\t\t\t\tarr.push(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfor (let i = 0; i < props.state.length; i++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tprops.state[0].dt_txt[9] === props.state[i].dt_txt[9] &&\r\n\t\t\t\t\t\tprops.state[0].dt_txt[8] === props.state[i].dt_txt[8]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tdata = props.state[i];\r\n\t\t\t\t\t\tarr.push(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.container}>\r\n\t\t\t{props.state.length !== 0 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className={s.buttons} onClick={() => setbuttonNumber(1)}>\r\n\t\t\t\t\t\t{date.getDate()}.{'0' + date.getMonth()}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className={s.buttons} onClick={() => setbuttonNumber(2)}>\r\n\t\t\t\t\t\t{date.getDate() + 1}.{'0' + date.getMonth()}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className={s.buttons} onClick={() => setbuttonNumber(3)}>\r\n\t\t\t\t\t\t{date.getDate() + 2}.{'0' + date.getMonth()}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className={s.buttons} onClick={() => setbuttonNumber(4)}>\r\n\t\t\t\t\t\t{date.getDate() + 3}.{'0' + date.getMonth()}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<table className={s.table}>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Время</th>\r\n\t\t\t\t\t\t\t\t<th>Температура (°C)</th>\r\n\t\t\t\t\t\t\t\t<th>Описание</th>\r\n\t\t\t\t\t\t\t\t<th>Влажность (%)</th>\r\n\t\t\t\t\t\t\t\t<th>Скорость ветра (м/с)</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{arr.map((item) => (\r\n\t\t\t\t\t\t\t\t<tr key={item.id}>\r\n\t\t\t\t\t\t\t\t\t<td>{item.dt_txt.substring(11, 16)}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{Math.round(item.main.feels_like)}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.weather[0].description}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.main.humidity}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.wind.speed}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useReducer } from 'react';\r\nimport { InitialState, WEATHER_CREATE, WeatherInfoReduser, DAYS_5 } from './WeatherInfoReduser';\r\nimport s from './Search.module.css';\r\nimport { InfoWeath } from './InfoWeath/InfoWeath';\r\nimport Table from './Table/Table';\r\n\r\nexport const API_KEY = '3dc8367615f5c307219e32825787a689';\r\n\r\nexport const Search: React.FC = () => {\r\n\tconst [ state, dispatch ] = useReducer(WeatherInfoReduser, InitialState);\r\n\tconst [ cityName, setValue ] = useState({ city: '' });\r\n\r\n\tconst fetch = async (e: React.FormEvent) => {\r\n\t\te.preventDefault();\r\n\t\tPromise.all([\r\n\t\t\taxios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityName.city}&appid=${API_KEY}&lang=ru&units=metric\r\n\r\n    `),\r\n\t\t\taxios.get(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/forecast?q=${cityName.city}&appid=${API_KEY}&lang=ru&units=metric`\r\n\t\t\t),\r\n\t\t\t,\r\n\t\t])\r\n\t\t\t.then(([ response, response2 ]) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: WEATHER_CREATE,\r\n\t\t\t\t\tpayload: response\r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: DAYS_5,\r\n\t\t\t\t\tpayload2: response2\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => alert('Такого города нет'));\r\n\t\tsetValue({ city: ' ' });\r\n\t};\r\n\r\n\tlet nameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue({ city: e.target.value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<div className={s.container}>\r\n\t\t\t\t<div className={s.titleText}>Узнайте погоду в вашем городе!</div>\r\n\t\t\t\t<div className={s.search}>\r\n\t\t\t\t\t<link\r\n\t\t\t\t\t\trel=\"stylesheet\"\r\n\t\t\t\t\t\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<form onSubmit={fetch} className={s.example}>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"City\" value={cityName.city} onChange={nameChange} />\r\n\t\t\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-search\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<InfoWeath\r\n\t\t\t\t\tstate={{\r\n\t\t\t\t\t\tmain: {\r\n\t\t\t\t\t\t\ttemp: state.temp,\r\n\t\t\t\t\t\t\ttemp_max: state.temp_max,\r\n\t\t\t\t\t\t\ttemp_min: state.temp_min,\r\n\t\t\t\t\t\t\tfeels_like: state.feels_like,\r\n\t\t\t\t\t\t\thumidity: state.humidity\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdt: state.dt,\r\n\t\t\t\t\t\tname: state.name,\r\n\t\t\t\t\t\tweather: [ { description: state.description, main: state.main } ],\r\n\t\t\t\t\t\twind: { speed: state.speed }\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Table state={state.list} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Search } from \"./Components/Search\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n         <Search />\n    </>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { store } from \"./Components/WeatherInfoReduser\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWeath\":\"InfoWeath_infoWeath__UL08c\",\"temp\":\"InfoWeath_temp__d0LeG\"};"],"sourceRoot":""}